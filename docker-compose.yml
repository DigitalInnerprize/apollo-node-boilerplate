version: '3.1'

services:
  mysql-db:
    container_name: mysql-db
    command: --default-authentication-plugin=mysql_native_password
    image: mysql:5.7
    env_file: .docker.env
    ports:
      - '3306:3306'
    volumes:
      - db_data:/var/lib/mysql
    expose: 
      - '3306'
  api:
    container_name: api
    image: node:10.16.0
    env_file: 
      - './server/.env'
    build: 
      context: ./server
      dockerfile: Dockerfile.dev
    ports:
      - '8080:8080'
    depends_on: 
      - "mysql-db"
    links: 
      - mysql-db
    volumes:
      - ./server:/src/app:delegated
      # bind-mounting these two files in will let you add packages during development without rebuilding
      # for example, to add bower to your app while developing, just install it inside the container
      # and then nodemon will restart. Your changes will last until you "docker-compose down" and will
      # be saved on host for next build
      # docker-compose exec node npm install --save bower
      - ./server/package.json:/src/package.json
      - ./server/package-lock.json:/src/package-lock.json
      # this is a workaround to prevent host node_modules from accidently getting mounted in container
      # in case you want to use node/npm both outside container for test/lint etc. and also inside container
      # this will overwrite the default node_modules dir in container so it won't conflict with our
      # /src/node_modules location. Thanks to PR from @brnluiz
      - notused:/src/app/node_modules

volumes:
  db_data:
  notused:
